{"mappings":"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","sources":["<anon>","script.js"],"sourcesContent":["var $c1ce9d969bfa6909$exports = {};\n\"use strict\";\nclass $c1ce9d969bfa6909$var$Workout {\n    date = new Date();\n    id = (Date.now() + \"\").slice(-10);\n    clicks = 0;\n    constructor(coords, distance, duration){\n        // this.date = ...\n        // this.id = ...\n        this.coords = coords; // [lat, lng]\n        this.distance = distance; // in km\n        this.duration = duration; // in min\n    }\n    _setDescription() {\n        // prettier-ignore\n        const months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n        ];\n        this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${months[this.date.getMonth()]} ${this.date.getDate()}`;\n    }\n    click() {\n        this.clicks++;\n    }\n}\nclass $c1ce9d969bfa6909$var$Running extends $c1ce9d969bfa6909$var$Workout {\n    type = \"running\";\n    constructor(coords, distance, duration, cadence){\n        super(coords, distance, duration);\n        this.cadence = cadence;\n        this.calcPace();\n        this._setDescription();\n    }\n    calcPace() {\n        // min/km\n        this.pace = this.duration / this.distance;\n        return this.pace;\n    }\n}\nclass $c1ce9d969bfa6909$var$Cycling extends $c1ce9d969bfa6909$var$Workout {\n    type = \"cycling\";\n    constructor(coords, distance, duration, elevationGain){\n        super(coords, distance, duration);\n        this.elevationGain = elevationGain;\n        // this.type = 'cycling';\n        this.calcSpeed();\n        this._setDescription();\n    }\n    calcSpeed() {\n        // km/h\n        this.speed = this.distance / (this.duration / 60);\n        return this.speed;\n    }\n}\n// const run1 = new Running([39, -12], 5.2, 24, 178);\n// const cycling1 = new Cycling([39, -12], 27, 95, 523);\n// console.log(run1, cycling1);\n///////////////////////////////////////\n// APPLICATION ARCHITECTURE\nconst $c1ce9d969bfa6909$var$sortWorkout = document.querySelector(\".handle-workout--sort__input\");\nconst $c1ce9d969bfa6909$var$typeSort = document.querySelector(\".handle-workout--type__input\");\nconst $c1ce9d969bfa6909$var$deleteBtn = document.querySelector(\".delete-all\");\nconst $c1ce9d969bfa6909$var$form = document.querySelector(\".form\");\nconst $c1ce9d969bfa6909$var$containerWorkouts = document.querySelector(\".workouts\");\nconst $c1ce9d969bfa6909$var$workoutList = document.querySelector(\".workout--list\");\nconst $c1ce9d969bfa6909$var$inputType = document.querySelector(\".form__input--type\");\nconst $c1ce9d969bfa6909$var$inputDistance = document.querySelector(\".form__input--distance\");\nconst $c1ce9d969bfa6909$var$inputDuration = document.querySelector(\".form__input--duration\");\nconst $c1ce9d969bfa6909$var$inputCadence = document.querySelector(\".form__input--cadence\");\nconst $c1ce9d969bfa6909$var$inputElevation = document.querySelector(\".form__input--elevation\");\nconst $c1ce9d969bfa6909$var$modal = document.querySelector(\".modal\");\nconst $c1ce9d969bfa6909$var$errorContent = document.querySelector(\".error-content\");\nconst $c1ce9d969bfa6909$var$closeModal = document.querySelector(\".btn--close-modal\");\n///////////////////////////\nconst $c1ce9d969bfa6909$var$locationErrorContent = `\n<h3>\\u{1F6AB}LOCATION ACCESS DENIED\\u{1F6AB}</h3>\n<br>\n<h4>Need Location Access For Working Of Application</h4>`;\nconst $c1ce9d969bfa6909$var$inputErrorContent = `\n<h3>\\u{26A0}\\u{FE0F}INPUT ERROR!\\u{26A0}\\u{FE0F}</h3>\n<br>\n<h4>Given Input Is Not Readable Try To Input Only Numbers And Positive Aspect The Elevation</h4>`;\nlet $c1ce9d969bfa6909$var$modalHTML;\nfunction $c1ce9d969bfa6909$var$sortW(arr, order, type) {\n    arr.sort(function(a, b) {\n        const idA = Number(a.id);\n        const idB = Number(b.id);\n        if (order === \"asc\" && type === \"date\") return idA - idB;\n        if (order === \"dec\" && type === \"date\") return idB - idA;\n        if (order === \"asc\" && type === \"distance\") return a.distance - b.distance;\n        if (order === \"dec\" && type === \"distance\") return b.distance - a.distance;\n    });\n}\n// Function to iterate through each element in a NodeList and apply a callback function\nfunction $c1ce9d969bfa6909$var$forEachElement(nodeList, callback) {\n    nodeList.forEach(callback);\n}\n// Function to handle elements without the 'hidden' class\nfunction $c1ce9d969bfa6909$var$handleElementWithoutHiddenClass(element) {\n    if (!element.classList.contains(\"hidden\")) return console.log(element);\n}\nclass $c1ce9d969bfa6909$var$App {\n    #map;\n    #mapZoomLevel = 13;\n    #mapEvent;\n    #workouts = [];\n    constructor(){\n        // Get user's position\n        this._getPosition();\n        // Get data from local storage\n        this._getLocalStorage();\n        // Attach event handlers\n        $c1ce9d969bfa6909$var$form.addEventListener(\"submit\", this._newWorkout.bind(this));\n        $c1ce9d969bfa6909$var$inputType.addEventListener(\"change\", this._toggleElevationField);\n        $c1ce9d969bfa6909$var$containerWorkouts.addEventListener(\"click\", this._moveToPopup.bind(this));\n        $c1ce9d969bfa6909$var$closeModal.addEventListener(\"click\", this._closeModal);\n        $c1ce9d969bfa6909$var$sortWorkout.addEventListener(\"change\", this._sortBy.bind(this));\n        $c1ce9d969bfa6909$var$typeSort.addEventListener(\"change\", this._sortWorkoutType);\n        $c1ce9d969bfa6909$var$deleteBtn.addEventListener(\"click\", this.reset);\n    }\n    _getPosition() {\n        if (navigator.geolocation) navigator.geolocation.getCurrentPosition(this._loadMap.bind(this), this._openModal);\n    }\n    _loadMap(position) {\n        const { latitude: latitude } = position.coords;\n        const { longitude: longitude } = position.coords;\n        // console.log(`https://www.google.pt/maps/@${latitude},${longitude}`);\n        const coords = [\n            latitude,\n            longitude\n        ];\n        this.#map = L.map(\"map\").setView(coords, this.#mapZoomLevel);\n        L.tileLayer(\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\", {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(this.#map);\n        // Handling clicks on map\n        this.#map.on(\"click\", this._showForm.bind(this));\n        this.#workouts.forEach((work)=>{\n            this._renderWorkoutMarker(work);\n        });\n    }\n    _openModal(modalV) {\n        $c1ce9d969bfa6909$var$modalHTML = $c1ce9d969bfa6909$var$locationErrorContent;\n        if (modalV === \"input\") $c1ce9d969bfa6909$var$modalHTML = $c1ce9d969bfa6909$var$inputErrorContent;\n        $c1ce9d969bfa6909$var$errorContent.insertAdjacentHTML(\"beforeend\", $c1ce9d969bfa6909$var$modalHTML);\n        $c1ce9d969bfa6909$var$modal.classList.remove(\"hidden\");\n    }\n    _closeModal() {\n        $c1ce9d969bfa6909$var$modal.classList.add(\"hidden\");\n        $c1ce9d969bfa6909$var$errorContent.innerHTML = \"\";\n        $c1ce9d969bfa6909$var$inputDistance.focus();\n    }\n    _sortBy() {\n        const sortValue = $c1ce9d969bfa6909$var$sortWorkout.value;\n        $c1ce9d969bfa6909$var$workoutList.innerHTML = \"\";\n        if (sortValue === \"recently-added\") {\n            console.log(\"hi\");\n            $c1ce9d969bfa6909$var$sortW(this.#workouts, \"asc\", \"date\") // instead of 'dsc' its sorted in 'asc' order\n            ;\n            this.#workouts.forEach((wor)=>{\n                this._renderWorkout(wor);\n            });\n            this._sortWorkoutType();\n        }\n        if (sortValue === \"oldest-first\") {\n            $c1ce9d969bfa6909$var$sortW(this.#workouts, \"dec\", \"date\");\n            this.#workouts.forEach((wor)=>{\n                this._renderWorkout(wor);\n            });\n            this._sortWorkoutType();\n        }\n        if (sortValue === \"longest-first\") {\n            $c1ce9d969bfa6909$var$sortW(this.#workouts, \"asc\", \"distance\");\n            this.#workouts.forEach((wor)=>{\n                this._renderWorkout(wor);\n            });\n            this._sortWorkoutType();\n        }\n        if (sortValue === \"shortest-first\") {\n            $c1ce9d969bfa6909$var$sortW(this.#workouts, \"dec\", \"distance\");\n            this.#workouts.forEach((wor)=>{\n                this._renderWorkout(wor);\n            });\n            this._sortWorkoutType();\n        }\n    }\n    _sortWorkoutType() {\n        const cycling = document.querySelectorAll(\".workout--cycling\");\n        const running = document.querySelectorAll(\".workout--running\");\n        const sort = $c1ce9d969bfa6909$var$typeSort.value;\n        if (sort === \"running\") {\n            cycling.forEach((wor)=>wor.classList.add(\"hidden\"));\n            running.forEach((wor)=>wor.classList.remove(\"hidden\"));\n        }\n        if (sort === \"cycling\") {\n            running.forEach((wor)=>wor.classList.add(\"hidden\"));\n            cycling.forEach((wor)=>wor.classList.remove(\"hidden\"));\n        }\n        if (sort === \"all\") {\n            cycling.forEach((wor)=>wor.classList.remove(\"hidden\"));\n            running.forEach((wor)=>wor.classList.remove(\"hidden\"));\n        }\n    }\n    _showForm(mapE) {\n        this.#mapEvent = mapE;\n        $c1ce9d969bfa6909$var$form.classList.remove(\"hidden\");\n        $c1ce9d969bfa6909$var$inputDistance.focus();\n    }\n    _hideForm() {\n        // Empty inputs\n        $c1ce9d969bfa6909$var$inputDistance.value = $c1ce9d969bfa6909$var$inputDuration.value = $c1ce9d969bfa6909$var$inputCadence.value = $c1ce9d969bfa6909$var$inputElevation.value = \"\";\n        $c1ce9d969bfa6909$var$form.style.display = \"none\";\n        $c1ce9d969bfa6909$var$form.classList.add(\"hidden\");\n        setTimeout(()=>$c1ce9d969bfa6909$var$form.style.display = \"grid\", 1000);\n    }\n    _toggleElevationField() {\n        $c1ce9d969bfa6909$var$inputElevation.closest(\".form__row\").classList.toggle(\"form__row--hidden\");\n        $c1ce9d969bfa6909$var$inputCadence.closest(\".form__row\").classList.toggle(\"form__row--hidden\");\n    }\n    _newWorkout(e) {\n        const validInputs = (...inputs)=>inputs.every((inp)=>Number.isFinite(inp));\n        const allPositive = (...inputs)=>inputs.every((inp)=>inp > 0);\n        e.preventDefault();\n        // Get data from form\n        const type = $c1ce9d969bfa6909$var$inputType.value;\n        const distance = +$c1ce9d969bfa6909$var$inputDistance.value;\n        const duration = +$c1ce9d969bfa6909$var$inputDuration.value;\n        const { lat: lat, lng: lng } = this.#mapEvent.latlng;\n        let workout;\n        // If workout running, create running object\n        if (type === \"running\") {\n            const cadence = +$c1ce9d969bfa6909$var$inputCadence.value;\n            // Check if data is valid\n            if (// !Number.isFinite(distance) ||\n            // !Number.isFinite(duration) ||\n            // !Number.isFinite(cadence)\n            !validInputs(distance, duration, cadence) || !allPositive(distance, duration, cadence)) return this._openModal(\"input\");\n            workout = new $c1ce9d969bfa6909$var$Running([\n                lat,\n                lng\n            ], distance, duration, cadence);\n        }\n        // If workout cycling, create cycling object\n        if (type === \"cycling\") {\n            const elevation = +$c1ce9d969bfa6909$var$inputElevation.value;\n            if (!validInputs(distance, duration, elevation) || !allPositive(distance, duration)) return this._openModal(\"input\");\n            workout = new $c1ce9d969bfa6909$var$Cycling([\n                lat,\n                lng\n            ], distance, duration, elevation);\n        }\n        // Add new object to workout array\n        this.#workouts.push(workout);\n        // Render workout on map as marker\n        this._renderWorkoutMarker(workout);\n        // Render workout on list\n        this._renderWorkout(workout);\n        // Hide form + clear input fields\n        this._hideForm();\n        // Set local storage to all workouts\n        this._setLocalStorage();\n    }\n    _renderWorkoutMarker(workout) {\n        L.marker(workout.coords).addTo(this.#map).bindPopup(L.popup({\n            maxWidth: 250,\n            minWidth: 100,\n            autoClose: false,\n            closeOnClick: false,\n            className: `${workout.type}-popup`\n        })).setPopupContent(`${workout.type === \"running\" ? \"\\uD83C\\uDFC3\\u200D\\u2642\\uFE0F\" : \"\\uD83D\\uDEB4\\u200D\\u2640\\uFE0F\"} ${workout.description}`).openPopup();\n    }\n    _renderWorkout(workout) {\n        let html = `\n      <li class=\"workout workout--${workout.type} work\" data-id=\"${workout.id}\">\n        <h2 class=\"workout__title\">${workout.description}</h2>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">${workout.type === \"running\" ? \"\\uD83C\\uDFC3\\u200D\\u2642\\uFE0F\" : \"\\uD83D\\uDEB4\\u200D\\u2640\\uFE0F\"}</span>\n          <span class=\"workout__value\">${workout.distance}</span>\n          <span class=\"workout__unit\">km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">\\u{23F1}</span>\n          <span class=\"workout__value\">${workout.duration}</span>\n          <span class=\"workout__unit\">min</span>\n        </div>\n    `;\n        if (workout.type === \"running\") html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">\\u{26A1}\\u{FE0F}</span>\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n          <span class=\"workout__unit\">min/km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">\\u{1F9B6}\\u{1F3FC}</span>\n          <span class=\"workout__value\">${workout.cadence}</span>\n          <span class=\"workout__unit\">spm</span>\n        </div>\n      </li>\n      `;\n        if (workout.type === \"cycling\") html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">\\u{26A1}\\u{FE0F}</span>\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n          <span class=\"workout__unit\">km/h</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">\\u{26F0}</span>\n          <span class=\"workout__value\">${workout.elevationGain}</span>\n          <span class=\"workout__unit\">m</span>\n        </div>\n      </li>\n      `;\n        $c1ce9d969bfa6909$var$workoutList.insertAdjacentHTML(\"afterbegin\", html);\n    }\n    _moveToPopup(e) {\n        // BUGFIX: When we click on a workout before the map has loaded, we get an error. But there is an easy fix:\n        if (!this.#map) return;\n        const workoutEl = e.target.closest(\".workout\");\n        if (!workoutEl) return;\n        const workout = this.#workouts.find((work)=>work.id === workoutEl.dataset.id);\n        this.#map.setView(workout.coords, this.#mapZoomLevel, {\n            animate: true,\n            pan: {\n                duration: 1\n            }\n        });\n    // using the public interface\n    // workout.click();\n    }\n    _setLocalStorage() {\n        localStorage.setItem(\"workouts\", JSON.stringify(this.#workouts));\n    }\n    _getLocalStorage() {\n        const data = JSON.parse(localStorage.getItem(\"workouts\"));\n        if (!data) return;\n        this.#workouts = data;\n        this.#workouts.forEach((work)=>{\n            this._renderWorkout(work);\n        });\n    }\n    reset() {\n        localStorage.removeItem(\"workouts\");\n        location.reload();\n    }\n}\nconst $c1ce9d969bfa6909$var$app = new $c1ce9d969bfa6909$var$App();\n\n\n//# sourceMappingURL=index.b1386ddf.js.map\n","'use strict';\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n  clicks = 0;\n\n  constructor(coords, distance, duration) {\n    // this.date = ...\n    // this.id = ...\n    this.coords = coords; // [lat, lng]\n    this.distance = distance; // in km\n    this.duration = duration; // in min\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n\n  click() {\n    this.clicks++;\n  }\n}\n\nclass Running extends Workout {\n  type = 'running';\n\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = 'cycling';\n\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration);\n    this.elevationGain = elevationGain;\n    // this.type = 'cycling';\n    this.calcSpeed();\n    this._setDescription();\n  }\n\n  calcSpeed() {\n    // km/h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n// const run1 = new Running([39, -12], 5.2, 24, 178);\n// const cycling1 = new Cycling([39, -12], 27, 95, 523);\n// console.log(run1, cycling1);\n\n///////////////////////////////////////\n// APPLICATION ARCHITECTURE\n\nconst sortWorkout = document.querySelector('.handle-workout--sort__input');\nconst typeSort = document.querySelector('.handle-workout--type__input');\nconst deleteBtn = document.querySelector('.delete-all')\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst workoutList = document.querySelector('.workout--list');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\nconst modal = document.querySelector('.modal');\nconst errorContent = document.querySelector('.error-content')\nconst closeModal = document.querySelector('.btn--close-modal');\n\n///////////////////////////\n\nconst locationErrorContent = `\n<h3>🚫LOCATION ACCESS DENIED🚫</h3>\n<br>\n<h4>Need Location Access For Working Of Application</h4>`;\nconst inputErrorContent = `\n<h3>⚠️INPUT ERROR!⚠️</h3>\n<br>\n<h4>Given Input Is Not Readable Try To Input Only Numbers And Positive Aspect The Elevation</h4>`;\nlet modalHTML;\nfunction sortW(arr,order,type){\n  arr.sort(function(a,b)\n  {\n    const idA = Number(a.id);\n    const idB = Number(b.id);\n    if(order === \"asc\"&& type === \"date\") return idA -idB;\n    if(order === \"dec\" && type === \"date\") return idB - idA;\n    if(order === \"asc\" && type === \"distance\") return a.distance - b.distance;\n    if(order === \"dec\" && type === \"distance\") return b.distance - a.distance;\n  })\n}\n// Function to iterate through each element in a NodeList and apply a callback function\nfunction forEachElement(nodeList, callback) {\n  nodeList.forEach(callback);\n}\n\n// Function to handle elements without the 'hidden' class\nfunction handleElementWithoutHiddenClass(element) {\n  if(!element.classList.contains('hidden')) return \".workout\",console.log(element);\n}\nclass App {\n  #map;\n  #mapZoomLevel = 13;\n  #mapEvent;\n  #workouts = [];\n\n  constructor() {\n    // Get user's position\n    this._getPosition();\n\n    // Get data from local storage\n    this._getLocalStorage();\n\n    // Attach event handlers\n    form.addEventListener('submit', this._newWorkout.bind(this));\n    inputType.addEventListener('change', this._toggleElevationField);\n    containerWorkouts.addEventListener('click', this._moveToPopup.bind(this));\n    closeModal.addEventListener('click',this._closeModal)\n    sortWorkout.addEventListener('change',this._sortBy.bind(this))\n    typeSort.addEventListener('change',this._sortWorkoutType)\n    deleteBtn.addEventListener('click',this.reset)\n  }\n\n  _getPosition() {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),this._openModal\n      );\n  }\n\n  _loadMap(position) {\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    // console.log(`https://www.google.pt/maps/@${latitude},${longitude}`);\n\n    const coords = [latitude, longitude];\n\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    // Handling clicks on map\n    this.#map.on('click', this._showForm.bind(this));\n\n    this.#workouts.forEach(work=>\n      {\n        this._renderWorkoutMarker(work);\n      })\n  }\n  \n  _openModal(modalV) {\n    modalHTML = locationErrorContent;\n    if(modalV === \"input\") modalHTML = inputErrorContent;\n    errorContent.insertAdjacentHTML('beforeend',modalHTML);\n    modal.classList.remove('hidden');\n  };\n  _closeModal()\n  {\n    modal.classList.add('hidden');\n    errorContent.innerHTML = \"\";\n    inputDistance.focus()\n  };\n  _sortBy(){\n    const sortValue = sortWorkout.value;\n    workoutList.innerHTML = \"\";\n    if(sortValue === \"recently-added\")\n    {\n      console.log('hi')\n      sortW(this.#workouts,'asc','date') // instead of 'dsc' its sorted in 'asc' order\n      this.#workouts.forEach(wor => {this._renderWorkout(wor)})\n      this._sortWorkoutType();\n    }\n    if(sortValue === 'oldest-first') // likewise\n    {\n      sortW(this.#workouts,'dec','date')\n      this.#workouts.forEach(wor => {this._renderWorkout(wor)})\n      this._sortWorkoutType();\n    }\n    if(sortValue === 'longest-first') // likewise\n    {\n      sortW(this.#workouts,'asc','distance')\n       this.#workouts.forEach(wor => {this._renderWorkout(wor)})\n       this._sortWorkoutType();\n    }\n    if(sortValue === 'shortest-first') // likewise\n    {\n      sortW(this.#workouts,'dec','distance')\n      this.#workouts.forEach(wor => {this._renderWorkout(wor)})\n      this._sortWorkoutType();\n    }\n  }\n  \n  _sortWorkoutType(){\n    const cycling = document.querySelectorAll('.workout--cycling');\n    const running = document.querySelectorAll('.workout--running');\n    const sort = typeSort.value;\n    \n    if(sort === \"running\")\n    {\n      cycling.forEach(wor => wor.classList.add('hidden'))\n      running.forEach(wor => wor.classList.remove('hidden'))\n    }\n    if(sort === \"cycling\")\n    {\n      running.forEach(wor => wor.classList.add('hidden'))\n      cycling.forEach(wor => wor.classList.remove('hidden'))\n    }\n    if(sort === \"all\")\n    {\n      cycling.forEach(wor => wor.classList.remove('hidden'));\n      running.forEach(wor => wor.classList.remove('hidden'));\n    }\n    \n  }\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    // Empty inputs\n    inputDistance.value = inputDuration.value = inputCadence.value = inputElevation.value =\n      '';\n\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  _toggleElevationField() {\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n\n  _newWorkout(e) {\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    e.preventDefault();\n\n    // Get data from form\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let workout;\n\n    // If workout running, create running object\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n\n      // Check if data is valid\n      if (\n        // !Number.isFinite(distance) ||\n        // !Number.isFinite(duration) ||\n        // !Number.isFinite(cadence)\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return this._openModal('input')\n\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n\n    // If workout cycling, create cycling object\n    if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return this._openModal(\"input\");\n\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n\n    // Add new object to workout array\n    this.#workouts.push(workout);\n\n    // Render workout on map as marker\n    this._renderWorkoutMarker(workout);\n\n    // Render workout on list\n    this._renderWorkout(workout);\n\n    // Hide form + clear input fields\n    this._hideForm();\n\n    // Set local storage to all workouts\n    this._setLocalStorage();\n  }\n_renderWorkoutMarker(workout) {\n  L.marker(workout.coords)\n  .addTo(this.#map)\n    .bindPopup(\n      L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick : false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${workout.description}`\n      )\n      .openPopup()\n  }\n\n  _renderWorkout(workout) {\n    let html = `\n      <li class=\"workout workout--${workout.type} work\" data-id=\"${workout.id}\">\n        <h2 class=\"workout__title\">${workout.description}</h2>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">${\n            workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\n          }</span>\n          <span class=\"workout__value\">${workout.distance}</span>\n          <span class=\"workout__unit\">km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⏱</span>\n          <span class=\"workout__value\">${workout.duration}</span>\n          <span class=\"workout__unit\">min</span>\n        </div>\n    `;\n\n    if (workout.type === 'running')\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n          <span class=\"workout__unit\">min/km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">🦶🏼</span>\n          <span class=\"workout__value\">${workout.cadence}</span>\n          <span class=\"workout__unit\">spm</span>\n        </div>\n      </li>\n      `;\n\n    if (workout.type === 'cycling')\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n          <span class=\"workout__unit\">km/h</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⛰</span>\n          <span class=\"workout__value\">${workout.elevationGain}</span>\n          <span class=\"workout__unit\">m</span>\n        </div>\n      </li>\n      `;\n\n    workoutList.insertAdjacentHTML('afterbegin', html);\n  }\n\n  _moveToPopup(e) {\n    // BUGFIX: When we click on a workout before the map has loaded, we get an error. But there is an easy fix:\n    if (!this.#map) return;\n    const workoutEl = e.target.closest('.workout');\n\n    if (!workoutEl) return;\n\n    const workout = this.#workouts.find(\n      work => work.id === workoutEl.dataset.id\n    );\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    });\n    // using the public interface\n    // workout.click();\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('workouts'));\n\n    if (!data) return;\n\n    this.#workouts = data;\n    \n    this.#workouts.forEach(work => {\n      this._renderWorkout(work);\n    });\n  }\n\n  reset() {\n    localStorage.removeItem('workouts');\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":["$c1ce9d969bfa6909$var$modalHTML","$c1ce9d969bfa6909$var$Workout","date","Date","id","now","slice","clicks","constructor","coords","distance","duration","_setDescription","description","type","toUpperCase","months","getMonth","getDate","click","$c1ce9d969bfa6909$var$Running","cadence","calcPace","pace","$c1ce9d969bfa6909$var$Cycling","elevationGain","calcSpeed","speed","$c1ce9d969bfa6909$var$sortWorkout","document","querySelector","$c1ce9d969bfa6909$var$typeSort","$c1ce9d969bfa6909$var$deleteBtn","$c1ce9d969bfa6909$var$form","$c1ce9d969bfa6909$var$containerWorkouts","$c1ce9d969bfa6909$var$workoutList","$c1ce9d969bfa6909$var$inputType","$c1ce9d969bfa6909$var$inputDistance","$c1ce9d969bfa6909$var$inputDuration","$c1ce9d969bfa6909$var$inputCadence","$c1ce9d969bfa6909$var$inputElevation","$c1ce9d969bfa6909$var$modal","$c1ce9d969bfa6909$var$errorContent","$c1ce9d969bfa6909$var$closeModal","$c1ce9d969bfa6909$var$locationErrorContent","$c1ce9d969bfa6909$var$inputErrorContent","$c1ce9d969bfa6909$var$sortW","arr","order","sort","a","b","idA","Number","idB","map","mapZoomLevel","mapEvent","workouts","_getPosition","_getLocalStorage","addEventListener","_newWorkout","bind","_toggleElevationField","_moveToPopup","_closeModal","_sortBy","_sortWorkoutType","reset","navigator","geolocation","getCurrentPosition","_loadMap","_openModal","position","latitude","longitude","L","setView","tileLayer","attribution","addTo","on","_showForm","forEach","work","_renderWorkoutMarker","modalV","insertAdjacentHTML","classList","remove","add","innerHTML","focus","sortValue","value","console","log","wor","_renderWorkout","cycling","querySelectorAll","running","mapE","_hideForm","style","display","setTimeout","closest","toggle","e","workout","validInputs","inputs","every","inp","isFinite","allPositive","preventDefault","lat","lng","latlng","elevation","push","_setLocalStorage","marker","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","className","setPopupContent","openPopup","html","toFixed","workoutEl","target","find","dataset","animate","pan","localStorage","setItem","JSON","stringify","data","parse","getItem","removeItem","location","reload"],"version":3,"file":"index.b1386ddf.js.map"}